name: Publish Alpha Apk 

on:
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "README.md"
      - "LICENSE.md"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get Commits Since Last Run
        run: |
          if [ -f last_sha.txt ]; then
            LAST_SHA=$(cat last_sha.txt)
          else
            LAST_SHA=$(git rev-list --max-parents=0 HEAD)
          fi
          echo "Commits since $LAST_SHA:"
          COMMIT_LOGS=$(git log $LAST_SHA..HEAD --pretty=format:"● %s ~%an [֍](https://github.com/${{ github.repository }}/commit/%H)" --max-count=10)
          COMMIT_LOGS=$(echo "$COMMIT_LOGS" | sed -E 's/#([0-9]+)/[#\1](https:\/\/github.com\/rebelonion\/Dantotsu\/pull\/\1)/g')
          COMMIT_LOGS="${COMMIT_LOGS//'%'/'%25'}"
          COMMIT_LOGS="${COMMIT_LOGS//$'\n'/'%0A'}"
          COMMIT_LOGS="${COMMIT_LOGS//$'\r'/'%0D'}"
          echo "COMMIT_LOGS=${COMMIT_LOGS}" >> $GITHUB_ENV
          echo "$COMMIT_LOGS" > commit_log.txt
          echo "BRANCH=${{ github.ref }}" >> $GITHUB_ENV
          shell: /usr/bin/bash -e {0}
        env:
          CI: true
        continue-on-error: true


      - name: Save Current SHA for Next Run
        run: echo ${{ github.sha }} > last_sha.txt

      - name: Set variables
        run: |
          VER=$(grep -E -o "versionName \".*\"" app/build.gradle | sed -e 's/versionName //g' | tr -d '"')
          SHA=${{ github.sha }}
          VERSION="$VER+${SHA:0:7}"
          echo "Version $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Alpha APK
        id: build_alpha
        run: ./gradlew assembleAlphaRelease

      - name: Sign Alpha APK
        if: success()
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: "app/build/outputs/apk/alpha/release"
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Check if APK was created
        id: check_apk
        run: |
          if [ ! -f app/build/outputs/apk/alpha/release/app-alpha-release-signed.apk ]; then
            echo "APK file not found!"
            exit 1
          fi

      - name: Upload Alpha APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: "Alpha APK"
          retention-days: 90
          path: "app/build/outputs/apk/alpha/release/app-alpha-release-signed.apk"

      - name: Send Alpha APK to Telegram
        if: success()
        run: |
          APK_PATH="app/build/outputs/apk/alpha/release/app-alpha-release-signed.apk"
          if [ "$SKIP_BUILD" != "true" ]; then
            response=$(curl -sS -f -X POST \
              "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
              -F "chat_id=${{ secrets.TELEGRAM_CHANNEL_ID }}" \
              -F "message_thread_id=28" \
              -F "document=@$APK_PATH" \
              -F "caption=New Alpha-Build dropped 🔥\n\nCommits:\n${COMMIT_LOG}\n\nDev:\n\nVersion: ${VERSION}" \
              -F "parse_mode=HTML")
            echo "$response"
          else
            echo "Skipping because skip build set to true"
          fi

      - name: Send Alpha APK to Discord
        if: always()
        run: |
          COMMIT_LOG=$(cat commit_log.txt)
          payload="{
            \"content\": \"<@&1208839371575529572>\",
            \"embeds\": [{
              \"title\": \"New Awery Alpha Update!\",
              \"description\": \"Commits:\n${COMMIT_LOG}\",
              \"color\": 5814783
            }]
          }"
          curl -H "Content-Type: application/json" \
            -d "$payload" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
          curl -H "Content-Type: multipart/form-data" \
            -F "file1=@app/build/outputs/apk/alpha/release/app-alpha-release-signed.apk" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Save Last Successful Commit SHA
        if: success()
        run: echo $GITHUB_SHA > last_successful_sha.txt
