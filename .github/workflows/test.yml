name: Build & Publish Alpha APK

on:
  push:
    branches:
      - Test
    paths-ignore:
      - "docs/**"
      - "README.md"
      - "LICENSE.md"
      - ".github/workflows/bug_greetings.yml"
      - ".github/workflows/feature_greetings.yml"
      - ".github/workflows/pr_greetings.yml"
      - ".github/workflows/test_build.yml"
      - ".github/ISSUE_TEMPLATE/config.yml"
      - ".github/ISSUE_TEMPLATE/report_issue.yml"
      - ".github/ISSUE_TEMPLATE/request_feature.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COMMIT_LOG: ""

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download last SHA artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: Test.yml
          name: last-sha
          path: .
        continue-on-error: true

      - name: Get Commits Since Last Run
        run: |
          if [ -f last_sha.txt ]; then
          LAST_SHA=$(cat last_sha.txt)
          else
          LAST_SHA=$(git rev-list --max-parents=0 HEAD)
          fi

          echo "Commits since $LAST_SHA:"
          COMMIT_LOGS=$(git log "$LAST_SHA"..HEAD --pretty=format:"● %s ~%an [֍](https://github.com/Shebyyy/Awery/commit/%H)" --max-count=10)
          COMMIT_LOGS=$(echo "$COMMIT_LOGS" | sed -E 's/#([0-9]+)/[#\1](https:\/\/github.com\/rebelonion\/Dantotsu\/pull\/\1)/g')
          COMMIT_LOGS="${COMMIT_LOGS//'%'/'%25'}"
          COMMIT_LOGS="${COMMIT_LOGS//$'\n'/'%0A'}"
          COMMIT_LOGS="${COMMIT_LOGS//$'\r'/'%0D'}"

          echo "COMMIT_LOG=${COMMIT_LOGS}" >> $GITHUB_ENV
          echo "$COMMIT_LOGS" > commit_log.txt

          BRANCH=refs/heads/Test
          BRANCH=${BRANCH#refs/heads/}
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
        continue-on-error: true

      - name: Save Current SHA for Next Run
        run: echo ${{ github.sha }} > last_sha.txt

      - name: Set variables
        run: |
          VER=$(grep -E -o "versionName \".*\"" app/build.gradle | sed -e 's/versionName //g' | tr -d '"')
          SHA=${{ github.sha }}
          VERSION="$VER+${SHA:0:7}"
          echo "Version $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setup JDK 17
        if: ${{ env.SKIP_BUILD != 'true' }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Upload APK to Discord and Telegram
        shell: bash
        run: |
          fetch_user_details() {
            local login=$1
            user_details=$(curl -s "https://api.github.com/users/$login")
            name=$(echo "$user_details" | jq -r '.name // .login')
            login=$(echo "$user_details" | jq -r '.login')
            avatar_url=$(echo "$user_details" | jq -r '.avatar_url')
            echo "$name|$login|$avatar_url"
          }

          declare -A additional_info
          additional_info["Sheby"]="\n Discord: <@951737931159187457>\n AniList: [takarealist112](<https://anilist.co/user/5724017/>)"
          additional_info["aayush262"]="\n Discord: <@918825160654598224>\n AniList: [aayush262](<https://anilist.co/user/5144645/>)"
          additional_info["rebelonion"]="\n Discord: <@714249925248024617>\n AniList: [rebelonion](<https://anilist.co/user/6077251/>)\n PornHub: [rebelonion](<https://www.cornhub.com/model/rebelonion>)"
          additional_info["Ankit Grai"]="\n Discord: <@1125628254330560623>\n AniList: [bheshnarayan](<https://anilist.co/user/6417303/>)"

          declare -A contributor_colors
          default_color="6121629"
          contributor_colors["grayankit"]="#ff9b46"
          contributor_colors["Sheby"]="#ff9b46"
          contributor_colors["aayush262"]="#5d689d"
          contributor_colors["Sadwhy"]="#ff7e95"
          contributor_colors["rebelonion"]="#d4e5ed"

          hex_to_decimal() { printf '%d' "0x${1#"#"}"; }

          declare -A recent_commit_counts
          while read -r count name; do
              recent_commit_counts["$name"]=$count
          done < <(echo "$COMMIT_LOG" | sed 's/%0A/\n/g' | grep -oP '(?<=~)[^[]*' | sort | uniq -c | sort -rn)

          sorted_contributors=$(for login in $(curl -s "https://api.github.com/repos/${{ github.repository }}/contributors" | jq -r '.[].login'); do
              user_info=$(fetch_user_details "$login")
              name=$(echo "$user_info" | cut -d'|' -f1)
              count=${recent_commit_counts["$name"]:-0}
              echo "$count|$login"
          done | sort -rn | cut -d'|' -f2)

          developers=""
          for login in $sorted_contributors; do
            user_info=$(fetch_user_details "$login")
            name=$(echo "$user_info" | cut -d'|' -f1)
            login=$(echo "$user_info" | cut -d'|' -f2)

            developer_entry="◗ **${name}** ${additional_info[$name]:-''}"
            developers+="${developer_entry}\n"
          done

          thumbnail_url="https://i.imgur.com/5o3Y9Jb.gif"

          discord_data=$(jq -n \
            --arg field_value "$COMMIT_LOG" \
            --arg author_value "$developers" \
            --arg footer_text "Version $VERSION" \
            --arg timestamp "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)" \
            --arg thumbnail_url "$thumbnail_url" \
            --arg embed_color "$default_color" \
            '{
              "content": "<@&1225347048321191996>",
              "embeds": [
                {
                  "title": "New Alpha-Build dropped",
                  "color": $embed_color | tonumber,
                  "fields": [
                    { "name": "Commits:", "value": $field_value, "inline": true },
                    { "name": "Developers:", "value": $author_value, "inline": false }
                  ],
                  "footer": { "text": $footer_text },
                  "timestamp": $timestamp,
                  "thumbnail": { "url": $thumbnail_url }
                }
              ],
              "attachments": []
            }')

          curl -H "Content-Type: application/json" \
               -d "$discord_data" \
               ${{ secrets.DISCORD_WEBHOOK }}
          
          if [ "$SKIP_BUILD" != "true" ]; then
            curl -F "payload_json=${contentbody}" \
                 -F "dantotsu_debug=@app/build/outputs/apk/alpha/release/app-alpha-release-signed.apk" \
                 ${{ secrets.DISCORD_WEBHOOK }}
          fi
        env:
          COMMIT_LOG: ${{ env.COMMIT_LOG }}
          VERSION: ${{ env.VERSION }}

      - name: Upload Current SHA as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: last-sha
          path: last_sha.txt

      - name: Upload Commit log as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: commit-log
          path: commit_log.txt