name: Publish Alpha
'on':
  push:
    branches:
      - master
    paths-ignore:
      - docs/**
      - README.md
      - LICENSE.md
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: adopt
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Get Commits Since Last Run
        run: |
          if [ -f last_sha.txt ]; then
            LAST_SHA=$(cat last_sha.txt)
            echo "Commits since $LAST_SHA:"
          else
            LAST_SHA=$(git rev-list --max-parents=0 HEAD)
            echo "Commits since initial commit:"
          fi
          COMMIT_LOGS=$(git log $LAST_SHA..HEAD --pretty=format:"● %s ~%an [֍](https://github.com/mrboomdeveloper/awery/commit/%H)")
          COMMIT_LOGS=$(echo "$COMMIT_LOGS" | sed -E 's/#([0-9]+)/[#\1](https:\/\/github.com\/mrboomdeveloper\/awery\/pull\/\1)/g')
          FORMATTED_COMMIT_LOGS="${COMMIT_LOGS//'%'/'%25'}"
          FORMATTED_COMMIT_LOGS="${FORMATTED_COMMIT_LOGS//$'\n'/'%0A'}"
          echo "COMMIT_LOG=${FORMATTED_COMMIT_LOGS}" >> $GITHUB_ENV
          echo "$FORMATTED_COMMIT_LOGS" > commit_log.txt
          BRANCH=${{ github.ref }}
          BRANCH=${BRANCH#refs/heads/}
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
          echo $GITHUB_SHA > last_sha.txt
        shell: bash
        env:
          CI: true
          
      - name: Build APKs
        run: |
          ./gradlew assembleAlphaRelease
          ./gradlew assembleBetaRelease
          ./gradlew assembleProdRelease
          
      - name: Sign APKs
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk
          signingKeyBase64: '${{ secrets.ANDROID_SIGNING_KEY }}'
          alias: '${{ secrets.ANDROID_KEY_ALIAS }}'
          keyStorePassword: '${{ secrets.ANDROID_KEYSTORE_PASSWORD }}'
          keyPassword: '${{ secrets.ANDROID_KEY_PASSWORD }}'
        env:
          BUILD_TOOLS_VERSION: 34.0.0
          
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: Alpha APK
          retention-days: 90
          path: app/build/outputs/apk/alpha/release/app-alpha-release-signed.apk
          
      - name: Send Alpha APK to Telegram
        if: always()
        run: |
          # Prepare the commit message
          COMMIT_LOG=$(cat commit_log.txt | sed 's/%0A/\n/g')
          telegram_commit_messages="<blockquote>${COMMIT_LOG}</blockquote>"

          # Send to Telegram
          curl -sS -f -X POST \
            "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
            -F "chat_id=-1002206819738" \
            -F "document=@app/build/outputs/apk/alpha/release/app-alpha-release-signed.apk" \
            -F "caption=New Awery Alpha Update\n\nCommits:\n${telegram_commit_messages}\nversion: ${VERSION}" \
            -F "parse_mode=HTML" \
            -F "message_thread_id=174"
            
      - name: Send Alpha APK to Discord
        if: always()
        run: |
          # Prepare commit details for Discord embed
          commit_id=$(echo "${{ github.sha }}" | cut -c1-7)
          commit_message=$(cat commit_log.txt | sed 's/%0A/\n/g')
          embed_payload=$(jq -nc --arg title "New Awery Alpha Update" \
            --arg description "${commit_message}" \
            --arg url "https://github.com/${{ github.repository }}/commit/${{ github.sha }}" \
            --arg color "65280" \
            --arg footer "Version: ${VERSION}" \
            '{
              embeds: [{
                title: $title,
                description: $description,
                url: $url,
                color: ($color | tonumber),
                footer: {
                  text: $footer
                }
              }]
            }')

          # Send to Discord with role mention
          curl -H "Content-Type: application/json" \
            -d "{\"content\": \"<@&1208839371575529572>\", \"embeds\": $embed_payload}" \
            -F "file1=@app/build/outputs/apk/alpha/release/app-alpha-release-signed.apk" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
