name: Publish Alpha

on:
  push:
    branches:
      - master

    paths-ignore:
      - "docs/**"
      - "README.md"
      - "LICENSE.md"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Get Latest Commit
        run: |
          COMMIT_LOG=$(git log -1 --pretty=format:"● %s ~%an")
          COMMIT_LOG="${COMMIT_LOG//'%'/'%25'}"
          COMMIT_LOG="${COMMIT_LOG//$'\n'/'%0A'}"
          COMMIT_LOG="${COMMIT_LOG//$'\r'/'%0D'}"
          echo "COMMIT_LOG=${COMMIT_LOG}" >> $GITHUB_ENV
          echo "$COMMIT_LOG" > commit_log.txt
        shell: bash
        env:
          CI: true
        continue-on-error: true

      - name: Build Alpha APK
        run: ./gradlew assembleAlphaRelease

      - name: Build Beta APK
        run: ./gradlew assembleBetaRelease

      - name: Build Production APK
        run: ./gradlew assembleProdRelease

      - name: Sign Alpha APK
        uses: r0adkll/sign-android-release@v1
        id: sign_alpha
        with:
          releaseDirectory: "app/build/outputs/apk/alpha/release"
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Sign Beta APK
        uses: r0adkll/sign-android-release@v1
        id: sign_beta
        with:
          releaseDirectory: "app/build/outputs/apk/beta/release"
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Sign Production APK
        uses: r0adkll/sign-android-release@v1
        id: sign_prod
        with:
          releaseDirectory: "app/build/outputs/apk/prod/release"
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Upload Beta APK
        uses: actions/upload-artifact@v4
        with:
          name: "Beta APK"
          retention-days: 90
          path: "app/build/outputs/apk/beta/release/app-beta-release-signed.apk"

      - name: Upload Alpha APK
        uses: actions/upload-artifact@v4
        with:
          name: "Alpha APK"
          retention-days: 90
          path: "app/build/outputs/apk/alpha/release/app-alpha-release-signed.apk"

      - name: Upload Production APK
        uses: actions/upload-artifact@v4
        with:
          name: "Production APK"
          retention-days: 90
          path: "app/build/outputs/apk/prod/release/app-prod-release-signed.apk"

      - name: Send Alpha APK to Telegram
        if: always()
        run: |
          # Read commit log and format it for Telegram
          COMMIT_LOG=$(cat commit_log.txt)
          telegram_commit_messages=$(echo "$COMMIT_LOG" | sed 's/%0A/\n/g' | while read -r line; do
            message=$(echo "$line" | sed -E 's/● (.*) ~(.*) \[֍\]\((.*)\)/● \1 ~\2 <a href="\3">֍<\/a>/')
            message=$(echo "$message" | sed -E 's/\[#([0-9]+)\]\((https:\/\/github\.com\/[^)]+)\)/<a href="\2">#\1<\/a>/g')
            echo "$message"
          done)
          telegram_commit_messages="<blockquote>${telegram_commit_messages}</blockquote>"
          
          # Upload APK to Telegram
          curl -sS -f -X POST \
            "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
            -F "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
            -F "document=@app/build/outputs/apk/alpha/release/app-alpha-release-signed.apk" \
            -F "caption=New Awery Alpha Update\n\nCommits:\n${telegram_commit_messages}\nversion: ${VERSION}" \
            -F "parse_mode=HTML" \
            -F "message_thread_id=${{ secrets.TELEGRAM_THREAD_ID }}"
               
      - name: Send Alpha APK to Discord
        if: always()
        run: |
          commit_id=$(echo "${{ github.sha }}" | cut -c1-7)
          author_name=$(git log -1 --pretty=format:'%an')
          author_link="[$author_name](<https://github.com/${{ github.repository_owner }}>)"
          payload=$(jq -nc --arg content "<@&1208839371575529572> 
          **Commit:** [${commit_id}](<https://github.com/${{ github.repository }}/commit/${{ github.sha }}>) by ${author_link} 
          **Message:** $(cat commit_log.txt)" '{content: $content}') 
          curl -F "payload_json=$payload" \
           -F "file1=@app/build/outputs/apk/alpha/release/app-alpha-release-signed.apk" \
           ${{ secrets.DISCORD_WEBHOOK_URL }}
