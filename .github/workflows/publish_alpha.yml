name: Build & Publish Alpha APK

on:
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "README.md"
      - "LICENSE.md"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Retrieve Last Successful Commit SHA
        id: last_successful_sha
        run: |
          LAST_SHA=$(cat last_successful_sha.txt 2>/dev/null || git rev-list --max-parents=0 HEAD)
          echo "LAST_SHA=${LAST_SHA}" >> $GITHUB_ENV

      - name: Get New Commits Since Last Successful Run
        id: get_commits
        run: |
          COMMIT_LOGS=$(git log ${{ env.LAST_SHA }}..HEAD --pretty=format:"● %s ~%an [֍](https://github.com/${{ github.repository }}/commit/%H)" --max-count=10)
          FORMATTED_COMMIT_LOGS=$(echo "$COMMIT_LOGS" | sed -E 's|#([0-9]+)|[#\1](https://github.com/${{ github.repository }}/pull/\1)|g')
          echo "COMMIT_LOG=${FORMATTED_COMMIT_LOGS:0:4096}" >> $GITHUB_ENV
          echo "$FORMATTED_COMMIT_LOGS" > commit_log.txt

      - name: Build Alpha APK
        id: build_alpha
        run: ./gradlew assembleAlphaRelease

      - name: Sign Alpha APK
        if: success()
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/alpha/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Prepare Release Directory
        if: success()
        run: |
          mkdir -p release_artifacts
          cp app/build/outputs/apk/alpha/release/*.apk release_artifacts/awery-alpha.apk
          echo "APK_PATH=release_artifacts/awery-alpha.apk" >> $GITHUB_ENV

      - name: Upload to Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: "Alpha APK"
          path: release_artifacts
          retention-days: 90

      - name: Send to Telegram
        if: success()
        run: |
          COMMIT_LOG=$(cat commit_log.txt)
          MESSAGE="<b>New Awery Alpha Update</b>%0A%0A<b>Latest Changes:</b>%0A${COMMIT_LOG}"
          MESSAGE="${MESSAGE:0:1020}"
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument" \
            -F "chat_id=-1002206819738" \
            -F "caption=$MESSAGE" \
            -F "parse_mode=HTML" \
            -F "disable_web_page_preview=true" \
            -F "message_thread_id=174" \
            -F "document=@${{ env.APK_PATH }}"

      - name: Send to Discord
        if: success()
        run: |
          COMMIT_LOG=$(cat commit_log.txt)
          curl -H "Content-Type: application/json" \
            -d "{\"content\":\"<@&1208839371575529572>\",\"embeds\":[{\"title\":\"New Awery Alpha Update!\",\"description\":\"$COMMIT_LOG\",\"color\":5814783}]}" \
            "${{ secrets.DISCORD_WEBHOOK_URL }}"
          curl -F "file=@${{ env.APK_PATH }}" "${{ secrets.DISCORD_WEBHOOK_URL }}"

      - name: Save Last Successful Commit SHA
        if: success()
        run: echo $GITHUB_SHA > last_successful_sha.txt
