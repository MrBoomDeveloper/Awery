[versions]
androidx-lifecycle = "2.9.4"
file-kache = "2.1.1"
kotlinx-serialization = "1.9.0"
kotlin = "2.2.20"
multiplatform-settings = "1.3.0"
room = "2.8.0"
okhttp = "5.1.0"
sqlite = "2.6.0"
ktor = "3.3.0"
filekit = "0.11.0"

[libraries]
fileKache = { module = "com.mayakapps.kache:file-kache", version.ref = "file-kache" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version = "0.6.2" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version = "1.10.2" }
kotlinx-coroutines-desktop = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version = "1.10.2" }
humanReadable = { module = "nl.jacobras:Human-Readable", version = "1.12.0" }

# File picker
filekit-core = { group = "io.github.vinceglb", name = "filekit-core", version.ref = "filekit" }
filekit-dialogs = { group = "io.github.vinceglb", name = "filekit-dialogs-compose", version.ref = "filekit" }
filekit-coil = { group = "io.github.vinceglb", name = "filekit-coil", version.ref = "filekit" }

# Settings
settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }

# Networking
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }

# Serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json-okio = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json-okio", version.ref = "kotlinx-serialization" }

# Database
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
androidx-sqlite = { module = "androidx.sqlite:sqlite", version.ref = "sqlite" }
androidx-sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

# State
lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
lifecycle-savedstate = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }

# Yomi
jsoup = { module = "org.jsoup:jsoup", version = "1.21.2" }
ksoup = { module = "com.fleeksoft.ksoup:ksoup", version = "0.2.5" }
injekt = { module = "com.github.mihonapp:injekt", version = "91edab2317" }
quickjs-android = { module = "app.cash.quickjs:quickjs-android", version = "0.9.2" }
quickjs-desktop = { module = "wang.harlon.quickjs:wrapper-java", version = "3.2.3" }
rx-android = { module = "io.reactivex:rxandroid", version = "1.2.1" }
rx-java = { module = "io.reactivex:rxjava", version = "1.3.8" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-brotli = { module = "com.squareup.okhttp3:okhttp-brotli", version = "5.1.0" }
okhttp-dnsoverhttps = { module = "com.squareup.okhttp3:okhttp-dnsoverhttps", version.ref = "okhttp" }

[bundles]
okhttp = ["okhttp", "okhttp-brotli", "okhttp-dnsoverhttps"]

[plugins]
room = { id = "androidx.room", version.ref = "room" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version = "0.17.1" }
kotlin-ksp = { id = "com.google.devtools.ksp", version = "2.2.20-2.0.3" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
maven-publish = { id = "com.vanniktech.maven.publish", version = "0.34.0" }